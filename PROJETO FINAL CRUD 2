using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;
using System.Text.Json;


namespace ConsoleApp1;





internal class Program
{
    static List<Livro> Lista_livros = new List<Livro>();
    static int gerarID = 1;



    public class Livro
    {
        public int ID { get; set; }
        public string Titulo { get; set; }

    }

   
    static void ChamarMenu()
    {

       
        Console.WriteLine("MENU");
        Console.WriteLine("1: Inserir Livro");
        Console.WriteLine("2: Mostrar Livro");
        Console.WriteLine("3: Remover Livro");
        Console.WriteLine("4: Editar Livro");
        Console.WriteLine("5: Sair");





    }
    static void ExecutarMenu()
    {
        while (true)
        {
           
            ChamarMenu();
            string opcao = Console.ReadLine();

            switch (opcao)
            {
                case "1":
                    
                    InserirLivro();
                    
                    break;
                case "2":
                    MostrarLivros();
                    
                    break;
                case "3":
                   ExcluirArquivoJson();
                   RemoverLivro();
                    
                    break;
                case "4":

                    break;

                case "5":
                    string json = JsonSerializer.Serialize(Lista_livros);
                    SalvarJsonEmArquivo(json);
                    Console.WriteLine("Volte Sempre!");
                    return;
                default:
                    Console.WriteLine("Opção inválida. Tente novamente.");
                    break;
            }
        }
    }







    static void InserirLivro()
    {
       
        Console.WriteLine("Inserir um novo livro:");

        Console.Write("Título: ");
        string titulo = Console.ReadLine();

        Livro novoLivro = new Livro { ID = gerarID, Titulo = titulo };
        Lista_livros.Add(novoLivro);
        gerarID++;

        Console.WriteLine("Livro cadastrado");
        Console.ReadLine();
    }
    static void SalvarJsonEmArquivo(string json) //mudar nome
    {
       
        string caminhoArquivo = @"C:\Users\Guilherme\OneDrive - SENAC-SC\PROGRAMA CRUD 19.09.23\Caminho_Json.txt";

       
        File.WriteAllText(caminhoArquivo, json);

     
    }

    static void SerializarLivrosParaJson()
    {
        var json = JsonSerializer.Serialize(Lista_livros);
        Console.WriteLine(json);
    }

    

    static void MostrarLivros()
    {
        Console.Clear();
        Console.WriteLine("Lista de Livros:");

        for (int i = 0; i < Lista_livros.Count; i++)
        {
            Console.WriteLine($"{i + 1}. ID: {Lista_livros[i].ID}, Título: {Lista_livros[i].Titulo}");
        }

        Console.WriteLine("Pressione Enter para voltar ao menu.");
        Console.ReadLine();
    }



    
    
    static void ExcluirArquivoJson(int livroID)
    {
        string caminhoArquivo = $"Caminho_para_os_arquivos_JSON\\Livro_{livroID}.json"; // Substitua pelo seu caminho real.

        if (File.Exists(caminhoArquivo))
        {
            File.Delete(caminhoArquivo);
            Console.WriteLine($"Arquivo JSON do livro {livroID} excluído com sucesso.");
        }
        else
        {
            Console.WriteLine($"O arquivo JSON do livro {livroID} não foi encontrado.");
        }
    }

   
    static void RemoverLivro()
    {
        Console.Clear();
        Console.WriteLine("Remover um livro:");

        if (Lista_livros.Count == 0)
        {
            Console.WriteLine("A lista de livros está vazia.");
            Console.ReadLine();
            return;
        }

        Console.Write("Informe o ID do livro a ser removido: ");
        if (int.TryParse(Console.ReadLine(), out int livroID))
        {
            int indice = Lista_livros.FindIndex(livro => livro.ID == livroID);

            if (indice != -1)
            {
                Livro livroRemovido = Lista_livros[indice];
                Lista_livros.RemoveAt(indice);
                Console.WriteLine($"{livroRemovido.Titulo} (ID: {livroID}) foi removido com sucesso.");
            }
            else
            {
                Console.WriteLine("Livro não encontrado.");
            }
        }
        else
        {
            Console.WriteLine("ID inválido. Informe um número válido.");
        }

        Console.ReadLine();
    }

    static void ExcluirArquivoJson()
    {
        string caminhoArquivo = @"C:\Users\Guilherme\OneDrive - SENAC-SC\PROGRAMA CRUD 19.09.23\Caminho_Json.txt";

        if (File.Exists(caminhoArquivo))
        {
            File.Delete(caminhoArquivo);
            Console.WriteLine("Arquivo de JSON excluído com sucesso.");
        }
        else
        {
            Console.WriteLine("O arquivo de JSON não foi encontrado.");
        }
    }

    static void EditarLivro()
    {
        Console.Clear();
        Console.WriteLine("Editar um livro:");

        if (Lista_livros.Count == 0)
        {
            Console.WriteLine("A lista de livros está vazia.");
            Console.ReadLine();
            return;
        }

        Console.WriteLine("Informe o título do livro a ser editado: ");
        string tituloEditar = Console.ReadLine();

        int indice = -1;

        for (int i = 0; i < Lista_livros.Count; i++)
        {
            if (string.Equals(Lista_livros[i].Titulo, tituloEditar))
            {
                indice = i;
                break;
            }
        }

        if (indice != -1)
        {
            Console.Write("Novo título: ");
            string novoTitulo = Console.ReadLine();

            Lista_livros[indice].Titulo = novoTitulo;
            Console.WriteLine("Livro editado com sucesso!");
        }
        else
        {
            Console.WriteLine("Livro não encontrado.");
        }

        Console.ReadLine();
    }


    static void Main(string[] args)
    {


        ExecutarMenu();





   }

    







}
